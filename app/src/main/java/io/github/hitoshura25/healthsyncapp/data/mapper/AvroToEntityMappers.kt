package io.github.hitoshura25.healthsyncapp.data.mapper

// Avro DTO imports
import io.github.hitoshura25.healthsyncapp.avro.AvroBloodGlucoseRecord
import io.github.hitoshura25.healthsyncapp.avro.AvroHeartRateRecord
import io.github.hitoshura25.healthsyncapp.avro.AvroSleepSessionRecord
import io.github.hitoshura25.healthsyncapp.avro.AvroSleepStageRecord // Added for the new mapper
import io.github.hitoshura25.healthsyncapp.avro.AvroStepsRecord
// Avro Enums
// Removed: import io.github.hitoshura25.healthsyncapp.avro.AvroBloodGlucoseLevelUnit - No longer used
import io.github.hitoshura25.healthsyncapp.avro.AvroBloodGlucoseMealType 
import io.github.hitoshura25.healthsyncapp.avro.AvroBloodGlucoseRelationToMeal 
import io.github.hitoshura25.healthsyncapp.avro.AvroBloodGlucoseSpecimenSource 
import io.github.hitoshura25.healthsyncapp.avro.AvroSleepStageType

// Room Entity imports
import io.github.hitoshura25.healthsyncapp.data.local.database.entity.BloodGlucoseEntity
import io.github.hitoshura25.healthsyncapp.data.local.database.entity.HeartRateSampleEntity
import io.github.hitoshura25.healthsyncapp.data.local.database.entity.SleepSessionEntity
import io.github.hitoshura25.healthsyncapp.data.local.database.entity.SleepStageEntity // Now imported and used
import io.github.hitoshura25.healthsyncapp.data.local.database.entity.StepsRecordEntity

// --- Steps --- 
fun AvroStepsRecord.toStepsRecordEntity(): StepsRecordEntity {
    return StepsRecordEntity(
        // id is auto-generated by Room
        hcUid = this.hcUid,
        count = this.count,
        startTimeEpochMillis = this.startTimeEpochMillis,
        endTimeEpochMillis = this.endTimeEpochMillis,
        zoneOffsetId = this.startZoneOffsetId,
        appRecordFetchTimeEpochMillis = this.appRecordFetchTimeEpochMillis,
    )
}

// --- Heart Rate --- 
fun AvroHeartRateRecord.toHeartRateSampleEntities(): List<HeartRateSampleEntity> {
    val parentSessionRecordUid = this.hcUid
    val recordFetchedAtTime = this.appRecordFetchTimeEpochMillis
    val sessionStartZoneOffsetId = this.startZoneOffsetId

    return this.samples.map { avroSample ->
        HeartRateSampleEntity(
            // id is auto-generated by Room
            hcRecordUid = parentSessionRecordUid,
            sampleTimeEpochMillis = avroSample.timeEpochMillis,
            beatsPerMinute = avroSample.beatsPerMinute,
            zoneOffsetId = sessionStartZoneOffsetId,
            appRecordFetchTimeEpochMillis = recordFetchedAtTime,
        )
    }
}

// --- Sleep Stage (New Mapper) ---
fun AvroSleepStageRecord.toSleepStageEntity(sessionHcUidParam: String): SleepStageEntity {
    return SleepStageEntity(
        // id is auto-generated by Room
        sessionHcUid = sessionHcUidParam, // Foreign key to the parent SleepSessionEntity
        startTimeEpochMillis = this.startTimeEpochMillis,
        endTimeEpochMillis = this.endTimeEpochMillis,
        stage = this.stage.name // Mapping AvroSleepStageType enum to its String name
    )
}

// --- Sleep Session --- 
fun AvroSleepSessionRecord.toSleepSessionEntity(): SleepSessionEntity {
    // Note: Mapping of stages is handled separately. 
    // The service will map AvroSleepStageRecord list to SleepStageEntity list using the dedicated mapper.
    return SleepSessionEntity(
        // id is auto-generated by Room
        hcUid = this.hcUid,
        title = this.title,
        notes = this.notes,
        startTimeEpochMillis = this.startTimeEpochMillis,
        startZoneOffsetId = this.startZoneOffsetId,
        endTimeEpochMillis = this.endTimeEpochMillis,
        endZoneOffsetId = this.endZoneOffsetId,
        durationMillis = this.durationMillis,
        appRecordFetchTimeEpochMillis = this.appRecordFetchTimeEpochMillis,
    )
}

// --- Blood Glucose --- 

private fun mapSpecimenSourceToInt(avroSpecimenSource: AvroBloodGlucoseSpecimenSource): Int { 
    return when (avroSpecimenSource) {
        AvroBloodGlucoseSpecimenSource.INTERSTITIAL_FLUID -> 1
        AvroBloodGlucoseSpecimenSource.CAPILLARY_BLOOD -> 2
        AvroBloodGlucoseSpecimenSource.PLASMA -> 3
        AvroBloodGlucoseSpecimenSource.SERUM -> 4
        AvroBloodGlucoseSpecimenSource.TEARS -> 5
        AvroBloodGlucoseSpecimenSource.WHOLE_BLOOD -> 6
        AvroBloodGlucoseSpecimenSource.UNKNOWN -> 0
    }
}

private fun mapMealTypeToInt(avroMealType: AvroBloodGlucoseMealType): Int { 
    return when (avroMealType) {
        AvroBloodGlucoseMealType.BREAKFAST -> 1
        AvroBloodGlucoseMealType.LUNCH -> 2
        AvroBloodGlucoseMealType.DINNER -> 3
        AvroBloodGlucoseMealType.SNACK -> 4
        AvroBloodGlucoseMealType.UNKNOWN -> 0
    }
}

private fun mapRelationToMealToInt(avroRelationToMeal: AvroBloodGlucoseRelationToMeal): Int { 
    return when (avroRelationToMeal) {
        AvroBloodGlucoseRelationToMeal.GENERAL -> 1
        AvroBloodGlucoseRelationToMeal.FASTING -> 2
        AvroBloodGlucoseRelationToMeal.BEFORE_MEAL -> 3
        AvroBloodGlucoseRelationToMeal.AFTER_MEAL -> 4
        AvroBloodGlucoseRelationToMeal.UNKNOWN -> 0
    }
}

fun AvroBloodGlucoseRecord.toBloodGlucoseEntity(): BloodGlucoseEntity {
    return BloodGlucoseEntity(
        // id is auto-generated by Room
        hcUid = this.hcUid,
        timeEpochMillis = this.timeEpochMillis,
        zoneOffsetId = this.zoneOffsetId,
        levelInMilligramsPerDeciliter = this.levelInMilligramsPerDeciliter, // Renamed field
        // levelUnit field removed from Entity
        specimenSource = mapSpecimenSourceToInt(this.specimenSource),
        mealType = mapMealTypeToInt(this.mealType),
        relationToMeal = mapRelationToMealToInt(this.relationToMeal),
        dataOriginPackageName = this.dataOriginPackageName, 
        hcLastModifiedTimeEpochMillis = this.hcLastModifiedTimeEpochMillis, 
        clientRecordId = this.clientRecordId, 
        clientRecordVersion = this.clientRecordVersion, 
        appRecordFetchTimeEpochMillis = this.appRecordFetchTimeEpochMillis,
    )
}
